# This is a playbook for configuring an ec2 instance for theyvoteforyou

# Run this like so:
# ansible-playbook -i ec2-hosts ec2-provisioning.yml

# To only run this for planningalerts:
# ansible-playbook -i ec2-hosts ec2-provisioning.yml -l planningalerts

# To only run this for openaustralia:
# ansible-playbook -i ec2-hosts ec2-provisioning.yml -l openaustralia

# To show the value of an encrypted variable:
# ansible planningalerts -i ec2-hosts -m debug -a 'var=planningalerts_production_mysql_password'

# Use terraform (see terraform directory) to actually provision ec2 infrastructure

- hosts: all
  become: true
  gather_facts: False

  tasks:
  - name: install python 2
    raw: test -e /usr/bin/python || (apt -y update && apt install -y python-minimal)
    changed_when: False

- hosts: ec2
  become: true
  tasks:
    - name: Install pip
      apt: pkg=python-pip

    - name: Install boto which is required for EC2 stuff
      pip: name=boto

    - name: Get information about the RDS instance
      rds:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        command: facts
        instance_name: main-database
        region: "{{ ec2_region }}"
      register: rds
      # Run this task even when running ansible-playbook with "--check"
      check_mode: no

- hosts: theyvoteforyou
  become: true
  roles:
    - theyvoteforyou

- hosts: planningalerts
  become: true
  roles:
    - planningalerts

- hosts: openaustralia
  become: true
  roles:
    - openaustralia
