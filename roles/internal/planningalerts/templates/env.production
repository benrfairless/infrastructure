# Only settings that have been customised appear here.
# Everything else defaults to what's committed in .env

STAGE=production

HOST=www.{{ planningalerts_domain }}

MORPH_API_KEY={{ morph_api_key }}

GOOGLE_ANALYTICS_KEY=UA-3107958-6

HONEYBADGER_API_KEY={{ honeybadger_api_key }}

SCRAPE_DELAY=14

GOOGLE_MAPS_API_KEY={{ google_maps_key }}
GOOGLE_MAPS_EMAIL_KEY={{ google_maps_email_key }}
GOOGLE_MAPS_SERVER_KEY={{ google_maps_server_key }}
GOOGLE_MAPS_CRYPTOGRAPHIC_KEY={{ google_maps_cryptographic_key }}

MAPPIFY_API_KEY={{ mappify_api_key }}

# This "PlanningAlerts" facebook app is currently owned by mlandauer
# TODO: Make sure others have access to it
FACEBOOK_APP_ID=335651659855671

TWITTER_CONSUMER_KEY={{ twitter_consumer_key }}
TWITTER_CONSUMER_SECRET={{ twitter_consumer_secret }}
TWITTER_OAUTH_TOKEN={{ twitter_oauth_token }}
TWITTER_OAUTH_TOKEN_SECRET={{ twitter_oauth_token_secret }}

CUTTLEFISH_SERVER=cuttlefish.oaf.org.au
CUTTLEFISH_USER_NAME={{ cuttlefish_user_name }}
CUTTLEFISH_PASSWORD={{ cuttlefish_password }}

# Stripe is used to process cards and manage billing for donations.
# See app/controllers/donations_controller.rb
STRIPE_PUBLISHABLE_KEY={{ stripe_publishable_key_live }}
STRIPE_SECRET_KEY={{ stripe_secret_key_live }}
# Stripe plan ID for recurring donation subscription.
# You need to make a subscription plan on stripe with the value of $1.
# Replace the example id for the plan here
STRIPE_PLAN_ID_FOR_DONATIONS=planningalerts_donations_01

# Feature flag: Uncomment the COUNCILLORS_ENABLED setting to allow people to
# optionally write to local councillors about applications instead of the
# planning authority. This is only available on authorities that have
# councillors associated with them.
COUNCILLORS_ENABLED=true

# Feature flag: Uncomment the CONTRIBUTE_COUNCILLORS_ENABLED setting to allow people
# to contribute information about councillors not currently in PlanningAlerts.
CONTRIBUTE_COUNCILLORS_ENABLED=true

DEVISE_SECRET_KEY={{ planningalerts_production_devise_secret_key }}
SECRET_KEY_BASE={{ planningalerts_production_secret_key_base }}

# WriteIt configuration
WRITEIT_BASE_URL={{ planningalerts_production_writeit_base_url }}
WRITEIT_URL={{ planningalerts_production_writeit_url }}
WRITEIT_USERNAME={{ planningalerts_production_writeit_username }}
WRITEIT_API_KEY={{ planningalerts_production_writeit_api_key }}

RECAPTCHA_SITE_KEY={{ recaptcha_site_key }}
RECAPTCHA_SECRET_KEY={{ recaptcha_secret_key }}

# For logging API calls and full text search (searchkick)
ELASTICSEARCH_URL={{ planningalerts_elasticsearch_url }}

# For backing up elasticsearch to S3
ELASTICSEARCH_SNAPSHOT_S3_BUCKET={{ elasticsearch_snapshot_s3_bucket }}
ELASTICSEARCH_SNAPSHOT_S3_REGION={{ elasticsearch_snapshot_s3_region }}
ELASTICSEARCH_SNAPSHOT_ACCESS_KEY={{ elasticsearch_snapshot_access_key }}
ELASTICSEARCH_SNAPSHOT_SECRET_KEY={{ elasticsearch_snapshot_secret_key }}

# Used for automatically creating issues when scrapers break
# requires "public_repo" and "project" permission
GITHUB_PERSONAL_ACCESS_TOKEN={{ planningalerts_github_personal_access_token }}

# Used for sending notifications messages to slack about failed email deliveries
# for comments to authorities
SLACK_WEBHOOK_URL={{ planningalerts_slack_webhook_url }}

# For checking the authenticity of a cuttlefish webhook (the key comes from Cuttlefish)
CUTTLEFISH_WEBHOOK_KEY={{ planningalerts_cuttlefish_webhook_key }}

# REDIS_URL=redis://localhost:6379/0
REDIS_URL=redis://planningalerts.bztev8.0001.apse2.cache.amazonaws.com:6379/0

# Database to use for flipper gem to store feature flags
# Numbering of database used here is based on giving space for migrating other
# users of redis to separate databases:
# Sidekiq        - production - 0
# Sidekiq        - staging    - 1
# API throttling - production - 2
# API throttling - staging    - 3
# Flipper        - production - 4
# Flipper        - staging    - 5
# At the moment Sidekiq for staging and production are all on database 0
# with staging and production separated by using namespaces. It's all
# a bit dodgy and not ideal which is why we should migrate to
# using separate databases

RACK_ATTACK_REDIS_URL=redis://planningalerts.bztev8.0001.apse2.cache.amazonaws.com:6379/2
FLIPPER_REDIS_URL=redis://planningalerts.bztev8.0001.apse2.cache.amazonaws.com:6379/4