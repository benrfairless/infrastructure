---
- name: Install memcached
  apt:
    pkg: memcached

- name: Make memcached listen to the outside world
  lineinfile:
    path: /etc/memcached.conf
    regexp: "^-l 127.0.0.1"
    line: "-l 0.0.0.0"
  notify:
    - memchached restart

- include_tasks: database.yml
  vars:
    stage: "{{ item }}"
  with_items:
    - production
    - staging  

- name: Ensure that deploy owns /srv/www and /srv/www/shared
  file:
    state: directory
    owner: deploy
    group: deploy
    path: '{{item}}'
  with_items:
    - /srv/www/production
    - /srv/www/production/shared
    - /srv/www/production/shared/config
    - /srv/www/production/shared/log
    - /srv/www/production/shared/public
    - /srv/www/production/shared/sitemaps
    - /srv/www/production/shared/system
    - /srv/www/staging
    - /srv/www/staging/shared
    - /srv/www/staging/shared/config
    - /srv/www/staging/shared/log
    - /srv/www/staging/shared/public
    - /srv/www/staging/shared/sitemaps
    - /srv/www/staging/shared/system

- name: Ensure packages to build gem native extensions are installed
  apt:
    pkg: ['libmysqlclient-dev', 'libxml2-dev', 'libxslt1-dev']

- name: Copy application database configuration
  template:
    src: "database-{{ item }}.yml"
    dest: /srv/www/{{ item }}/shared/database.yml
    owner: deploy
    group: deploy
  with_items:
    - production
    - staging
  notify: restart web server

- name: Copy application database configuration
  template:
    src: "database-{{ item }}.yml"
    dest: /srv/www/{{ item }}/shared/config/database.yml
    owner: deploy
    group: deploy
  with_items:
    - production
    - staging
  notify: restart web server

- name: Copy application new relic configuration
  template:
    src: newrelic.yml
    dest: /srv/www/production/shared/
    owner: deploy
    group: deploy
  notify: restart web server

- name: Copy application new relic configuration
  template:
    src: newrelic.yml
    dest: /srv/www/production/shared/config
    owner: deploy
    group: deploy
  notify: restart web server

- name: Copy application environment variables
  template:
    src: "env.{{ item }}"
    # Naming of the file .env.production is a little misleading (in staging environment)
    # Probably should just be called "env" and capistrano will need updating too
    # TODO: Fix this
    dest: "/srv/www/{{ item }}/shared/.env.production"
    owner: deploy
    group: deploy
  with_items:
    - production
    - staging
  notify: restart web server

# This is so that cap 3 deploys will work which check the existence of the file on the other
# end of the symbolic link
- name: Ensure that sitemap.xml exists 
  file:
    path: "/srv/www/{{ item }}/shared/public/sitemap.xml"
    owner: deploy
    group: deploy
    state: touch
  with_items:
    - production
    - staging

- name: Allow deploy user to control services
  copy:
    src: deploy_service_control
    dest: /etc/sudoers.d/
    validate: visudo -cf %s

- name: Autoremove unneeded packages
  apt:
    autoremove: yes
