---
- include_vars: encrypted.yml
- include_vars: encrypted_vars/dnsmadeeasy.yml

- name: Create planningalerts databases
  mysql_db:
    login_host: "{{ mysql_host }}"
    login_user: admin
    login_password: "{{ rds_admin_password }}"
    name: "pa-{{ item }}"
  with_items:
    - production
    - staging

- name: Create planningalerts user with access to the database (production)
  mysql_user:
    login_host: "{{ mysql_host }}"
    login_user: admin
    login_password: "{{ rds_admin_password }}"
    name: pa-production
    password: "{{ planningalerts_production_mysql_password }}"
    priv: 'pa-production.*:ALL'
    host: "%"

- name: Create planningalerts user with access to the database (staging)
  mysql_user:
    login_host: "{{ mysql_host }}"
    login_user: admin
    login_password: "{{ rds_admin_password }}"
    name: pa-staging
    password: "{{ planningalerts_staging_mysql_password }}"
    priv: 'pa-staging.*:ALL'
    host: "%"

- name: Ensure that deploy owns /srv/www and /srv/www/shared
  file:
    state: directory
    owner: deploy
    group: deploy
    path: '{{item}}'
  with_items:
    - /srv/www
    - /srv/www/shared

- name: Ensure packages to build gem native extensions are installed
  apt:
    pkg: '{{item}}'
  with_items:
    - libmysqlclient-dev
    - libxml2-dev
    - libxslt1-dev
    - sphinxsearch

- name: Copy application configuration
  template:
    src: "{{ item }}"
    dest: /srv/www/shared/
    owner: deploy
    group: deploy
  with_items:
    - configuration.rb
  notify: nginx reload

- name: Copy static application configuration
  copy:
    src: '{{item}}'
    dest: /srv/www/shared/
    owner: deploy
    group: deploy
  with_items:
    - database.yml
    # FIXME: Regenerated by daily rake task so provisioning runs are marked as changed
    - production.sphinx.conf
    - sphinx.yml
    # TODO: Update throttling configuration (based on latest used in production)
    - throttling.yml
  notify: nginx reload

# TODO: Only run this in development
- name: Copy SSL certificates for development
  copy:
    src: "{{ item }}"
    dest: /etc/ssl/
    mode: 0644
  with_items:
    - planningalerts.org.au.dev.pem
    - test.planningalerts.org.au.dev.pem
  notify: nginx reload

# TODO: Only run this in development
- name: Copy SSL keys for development
  copy:
    src: "{{ item }}"
    dest: /etc/ssl/private/
    group: ssl-cert
    mode: 0640
  with_items:
    - planningalerts.org.au.dev.key
    - test.planningalerts.org.au.dev.key
  notify: nginx reload

- name: Copy production SSL key
  copy:
    content: "{{ planningalerts_production_ssl_key }}"
    dest: /etc/ssl/private/planningalerts.org.au.key
    owner: root
    group: ssl-cert
    mode: 0640
  notify: nginx reload

- name: Copy API SSL key
  copy:
    content: "{{ planningalerts_api_ssl_key }}"
    dest: /etc/ssl/private/api.planningalerts.org.au.key
    owner: root
    group: ssl-cert
    mode: 0640
  notify: nginx reload

- name: Copy nginx main configuration
  copy:
    src: nginx.conf
    dest: /etc/nginx/
  notify: nginx restart

- name: Copy test/test password for staging site
  copy:
    src: htpasswd
    dest: /etc/nginx/
  notify: nginx restart

- name: Copy nginx site configuration
  copy:
    src: default
    dest: /etc/nginx/sites-available/
  notify: nginx reload

# TODO: Get the application to generate this on each deploy
- name: Copy application upstart service configuration
  copy:
    src: '{{item}}'
    dest: /etc/init/
  with_items:
    - planningalerts.conf
    - planningalerts-sphinx-1.conf
    - planningalerts-sphinx.conf
    - planningalerts-worker-1.conf
    - planningalerts-worker.conf

- name: Allow deploy user to control services
  copy:
    src: deploy_service_control
    dest: /etc/sudoers.d/
    validate: visudo -cf %s

# TODO: We should have the option to disable this
- name: Set up PlanningAlerts daily scrape and email job
  cron:
    name: planningalerts_scrape_and_email
    user: deploy
    hour: 12
    job: "cd /srv/www/current && /usr/local/bin/bundle exec rake planningalerts:applications:scrape_and_email RAILS_ENV=production"
