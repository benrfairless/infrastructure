---

# Install php5 on xenial requires a few more jumps than usual
- name: Add repo for installing php5
  apt_repository:
    repo: 'ppa:ondrej/php'

- name: Install packages required by Electionleaflets
  apt: name={{ item }} state=present
  with_items:
    - php5.6
    - php5.6-imap
    - php5.6-gd
    - php5.6-mysql
    - php5.6-mbstring
    - apache2
    - libapache2-mod-php5.6
    - python-mysqldb

- name: Create electionleaflets databases
  mysql_db:
    login_host: "{{ mysql_host }}"
    login_user: admin
    login_password: "{{ rds_admin_password }}"
    name: "el-{{ item }}"
  with_items:
    - production
    - staging

- name: Create electionleaflets user with access to the database (production)
  mysql_user:
    login_host: "{{ mysql_host }}"
    login_user: admin
    login_password: "{{ rds_admin_password }}"
    name: el-production
    password: "{{ electionleaflets_production_mysql_password }}"
    priv: 'el-production.*:ALL'
    host: "%"

- name: Create electionleaflets user with access to the database (staging)
  mysql_user:
    login_host: "{{ mysql_host }}"
    login_user: admin
    login_password: "{{ rds_admin_password }}"
    name: el-staging
    password: "{{ electionleaflets_staging_mysql_password }}"
    priv: 'el-staging.*:ALL'
    host: "%"

# The rest of the deploy directories get created by running "cap deploy:setup"
- name: Ensure that directories exist
  file: path={{ item }} owner=deploy group=deploy state=directory
  with_items:
    - "/srv/www"
    - "/srv/www/log"
    - "/srv/www/production/shared"
    - "/srv/www/production/shared/config"
    - "/srv/www/staging"
    - "/srv/www/staging/shared"
    - "/srv/www/staging/shared/config"

- name: Ensure that shared data directories exist and are writeable
  file: path={{ item }} owner=deploy group=www-data mode=775 state=directory
  with_items:
    - "/srv/www/shared/data"
    - "/srv/www/shared/data/smarty_compile"
    - "/srv/www/shared/data/smarty_compile"
    - "/srv/www/shared/data/cache"
    - "/srv/www/shared/data/temp"
    - "/srv/www/shared/data/images"
    - "/srv/www/shared/data/images/small"
    - "/srv/www/shared/data/images/original"
    - "/srv/www/shared/data/images/large"
    - "/srv/www/shared/data/images/medium"
    - "/srv/www/shared/data/images/thumbnail"

- name: Copy application database configuration
  template:
    src: "database-{{ item }}.yml"
    dest: "/srv/www/{{ item }}/shared/config/database.yml"
    owner: deploy
    group: deploy
  with_items:
    - production
    - staging

- name: Electionleaflets main config
  template:
    src: general.php
    dest: /srv/www/{{ item }}/shared/config/
  vars:
    stage: "{{ item }}"
    db_password: "{{ (item == 'production') | ternary(electionleaflets_production_mysql_password, electionleaflets_staging_mysql_password) }}"
  with_items:
    - production
    - staging
  notify: reload apache

- name: Copy across the main apache config
  template: src=apache2.conf dest=/etc/apache2/
  notify: reload apache

- name: Enable apache rewrite module
  apache2_module: state=present name=rewrite
  notify: reload apache

- name: Copy across the apache config
  template: src=electionleaflets.org.au.dev.conf dest=/etc/apache2/sites-available/
  notify: reload apache

- name: Enable virtual host
  file: src="../sites-available/electionleaflets.org.au.dev.conf" dest="/etc/apache2/sites-enabled/electionleaflets.org.au.dev.conf" state=link
  notify: reload apache

- name: Disable default virtual host
  file: dest="/etc/apache2/sites-enabled/000-default.conf" state=absent
  notify: reload apache

# TODO Only enable on production server or with separate config values
# - name: Cron for mail import
#   cron: name="mail import" minute="*/5" user=deploy job="cd /srv/www/current/tools && php import_mail.php" state=present

- name: Cron for email alerts
  cron: name="email alerts" minute="*/5" user=deploy job="cd /srv/www/current/tools && php alertomatic.php" state=present
