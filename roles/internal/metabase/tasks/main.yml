---
- name: Install dependency for postgresql_db
  apt:
    pkg: python3-psycopg2

- name: Ensure that we have the Docker repository key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg

- name: Ensure that we have the docker repository
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu jammy stable"

- name: Install docker
  apt:
    name:
      - docker-ce 
      - docker-ce-cli
      - containerd.io

- name: Install dependency for ansible mysql_db module
  apt:
    pkg: python3-mysqldb

- name: Install pip
  apt:
    pkg: python3-pip

- name: Install docker-compose python library
  pip:
    name: docker-compose

- name: Create database
  postgresql_db:
    login_host: "{{ postgresql_host }}"
    login_user: root
    login_password: "{{ rds_admin_password }}"
    name: "metabase"

- name: Create posgresql role
  postgresql_user:
    login_host: "{{ postgresql_host }}"
    login_user: root
    login_password: "{{ rds_admin_password }}"
    db: "metabase"
    name: "metabase"
    password: "{{ db_password }}"
    priv: ALL
    no_password_changes: true

- name: Create /srv/www directory
  file:
    state: directory
    owner: deploy
    group: deploy
    path: /srv/www

- name: Copy across docker-compose.yml
  template:
    src: docker-compose.yml
    dest: /srv/www

- name: Run metabase
  docker_compose:
    project_src: /srv/www

- name: Create posgresql user rtk-production-readonly
  postgresql_user:
    login_host: "{{ postgresql_host }}"
    login_user: root
    login_password: "{{ rds_admin_password }}"
    db: "rtk-production"
    name: "rtk-production-readonly"
    password: "{{ rtk_production_readonly_postgresql_password }}"
    no_password_changes: true

- name: Give the user rtk-production-readonly readonly access to the production righttoknow database
  postgresql_privs:
    login_host: "{{ postgresql_host }}"
    login_user: root
    login_password: "{{ rds_admin_password }}"
    db: "rtk-production"
    role: "rtk-production-readonly"
    privs: SELECT
    objs: ALL_IN_SCHEMA
