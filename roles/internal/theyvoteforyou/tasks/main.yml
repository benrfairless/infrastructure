---
- name: Create theyvoteforyou databases
  mysql_db:
    login_host: "{{ mysql_host }}"
    login_user: admin
    login_password: "{{ rds_admin_password }}"
    name: "tvfy-{{ item }}"
  with_items:
    - production
    - staging

- name: Create theyvoteforyou user with access to the database (production)
  mysql_user:
    login_host: "{{ mysql_host }}"
    login_user: admin
    login_password: "{{ rds_admin_password }}"
    name: tvfy-production
    password: "{{ theyvoteforyou_production_mysql_password }}"
    priv: 'tvfy-production.*:ALL'
    host: "%"

- name: Create theyvoteforyou user with access to the database (staging)
  mysql_user:
    login_host: "{{ mysql_host }}"
    login_user: admin
    login_password: "{{ rds_admin_password }}"
    name: tvfy-staging
    password: "{{ theyvoteforyou_staging_mysql_password }}"
    priv: 'tvfy-staging.*:ALL'
    host: "%"

- name: Ensure that deploy owns /srv/www and /srv/www/shared
  file:
    state: directory
    owner: deploy
    group: deploy
    path: '{{item}}'
  with_items:
    - /srv/www
    - /srv/www/production
    - /srv/www/production/shared
    - /srv/www/staging
    - /srv/www/staging/shared

- name: Copy application settings
  copy:
    src: settings.yml
    dest: "/srv/www/{{ item }}/shared/config/"
    owner: deploy
    group: deploy
  with_items:
    - production
    - staging
  notify: nginx reload

- name: Copy application database configuration
  template:
    src: "database-{{ item }}.yml"
    dest: "/srv/www/{{ item }}/shared/config/database.yml"
    owner: deploy
    group: deploy
  with_items:
    - production
    - staging
  notify: nginx reload

- name: Copy application secrets
  template:
    src: secrets.yml
    dest: "/srv/www/{{ item }}/shared/config/"
    owner: deploy
    group: deploy
  with_items:
    - production
    - staging
  notify: nginx reload

- name: Copy application newrelic configuration
  template:
    src: newrelic.yml
    dest: "/srv/www/{{ item }}/shared/config/"
    owner: deploy
    group: deploy
  with_items:
    - production
    - staging
  notify: nginx reload

- name: Ensure packages to build gem native extensions are installed
  apt:
    pkg: "{{item}}"
  with_items:
    - libmysqlclient-dev

- name: Copy SSL certificates
  copy:
    src: "{{ item }}"
    dest: /etc/ssl/
    owner: root
    group: root
    mode: 0644
  with_items:
    - theyvoteforyou.org.au.dev.pem
    - test.theyvoteforyou.org.au.dev.pem
  notify: nginx reload

- name: Copy SSL keys
  copy:
    src: "{{ item }}"
    dest: /etc/ssl/private/
    owner: root
    group: ssl-cert
    mode: 0640
  with_items:
    - theyvoteforyou.org.au.dev.key
    - test.theyvoteforyou.org.au.dev.key
  notify: nginx reload

- name: Copy test/test password for staging site
  copy:
    src: htpasswd
    dest: /etc/nginx/
  notify: nginx restart

- name: Copy nginx main configuration
  copy:
    src: nginx.conf
    dest: /etc/nginx/
  notify: nginx restart

- name: Copy nginx site configuration
  template:
    src: "{{ item }}"
    dest: /etc/nginx/sites-available/
  with_items:
    - default
    - production
    - staging
  notify: nginx reload

- name: Enable sites
  file:
    src: /etc/nginx/sites-available/{{ item }}
    dest: /etc/nginx/sites-enabled/{{ item }}
    state: link
  with_items:
    - default
    - production
    - staging
  notify: nginx reload

- name: Allow deploy user to control application services
  copy:
    src: theyvoteforyou_foreman
    dest: /etc/sudoers.d/
    validate: visudo -cf %s
  # notify: sudo reload

- name: Set up daily load cron job
  cron:
    name: theyvoteforyou_application_load_daily
    user: deploy
    hour: 9
    minute: 15
    weekday: 1-5
    job: "cd /srv/www/production/current && /usr/local/bin/bundle exec rake application:load:daily RAILS_ENV=production"
  when: theyvoteforyou_cron_enabled

- include_vars:
    file: encrypted_vars/dnsmadeeasy.yml
  tags:
    - dns

- name: DNS setup for theyvoteforyou.org.au
  dnsmadeeasy:
    account_key: "{{ dnsmadeeasy_key }}"
    account_secret: "{{ dnsmadeeasy_secret }}"
    domain: "theyvoteforyou.org.au"
    # TODO: Raise it back up to 1800 when migration is complete
    record_ttl: 300
    state: present
    record_name: "{{ item.name }}"
    record_type: "{{ item.type }}"
    record_value: '{{ item.value }}'
  tags:
    - dns
  with_items:
    - {type: "A", name: "", value: "103.243.244.10"}
    - {type: "CNAME", name: "www",    value: ""}
    - {type: "CNAME", name: "test",   value: ""}
    - {type: "CNAME", name: "email",  value: "cuttlefish.io."}
    - {type: "CNAME", name: "email2", value: "cuttlefish.oaf.org.au."}
    - {type: "MX", name: "", value: "1 aspmx.l.google.com."}
    - {type: "MX", name: "", value: "5 alt1.aspmx.l.google.com."}
    - {type: "MX", name: "", value: "5 alt2.aspmx.l.google.com."}
    - {type: "MX", name: "", value: "10 aspmx2.googlemail.com."}
    - {type: "MX", name: "", value: "10 aspmx3.googlemail.com."}
    - {type: "TXT", name: "", value: '"v=spf1 include:_spf.google.com -all"'}
    - {type: "TXT", name: "cuttlefish._domainkey", value: '"k=rsa; p=MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA0toFOrXAOcbnS8LNeKQsetYEO4Qh1RLGCx9+prCDeXBgs0obFCPWyanqxiPL6WEZCv+Vj4TCBPfoVCR1G0hszOZIA1QCEx0tG4v3dE2QsS3tSVCl9ax1h0oi4fC5aJ7XdxI+e2JVcWwmSSCLoKbkJYpj+6VBr86jUZl6f3JeUH/RuIeS6jIHRFmM6Mz/BfzloxM2wbDK32""0DUs3yWkL3/RcwkT6ebI9oS+ZWIxKXAgEcreTG0JltgPR/ABPFNzms4mAtLwPojF/FAYzGCj6diGbB61LNcMwe0MrutvLucclhnSefG5E3GVNqLrQA1oXzwFLFsq1H0x8rFccm+GNAuQIDAQAB"'}

- name: DNS setup for theyvoteforyou.org
  dnsmadeeasy:
    account_key: "{{ dnsmadeeasy_key }}"
    account_secret: "{{ dnsmadeeasy_secret }}"
    domain: "theyvoteforyou.org"
    # TODO: Raise it back up to 1800 when migration is complete
    record_ttl: 300
    state: present
    record_name: "{{ item.name }}"
    record_type: "{{ item.type }}"
    record_value: '{{ item.value }}'
  tags:
    - dns
  with_items:
    - {type: "A", name: "", value: "103.243.244.10"}
    - {type: "CNAME", name: "www",    value: ""}

- name: DNS setup for theyvoteforyou.com.au
  dnsmadeeasy:
    account_key: "{{ dnsmadeeasy_key }}"
    account_secret: "{{ dnsmadeeasy_secret }}"
    domain: "theyvoteforyou.com.au"
    # TODO: Raise it back up to 1800 when migration is complete
    record_ttl: 300
    state: present
    record_name: "{{ item.name }}"
    record_type: "{{ item.type }}"
    record_value: '{{ item.value }}'
  tags:
    - dns
  with_items:
    - {type: "A", name: "", value: "103.243.244.10"}
    - {type: "CNAME", name: "www",    value: ""}
